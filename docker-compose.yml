version: '3'

services:

  myapp:
    build: ./myapp
    command: npm run dev
    ports:
     - 12345:5000
    depends_on:
      - mongodb
      - messagebroker
    environment:
      - PORT=5000
      - MONGO_URL=mongodb://josvoogt21:password@mongodb:27017
      - DB_NAME=myapp
      - MESSAGEBROKER=amqp://messagebroker:5672
    volumes:
      - ./myapp:/app

  mysecondapp:
    build: ./mysecondapp
    command: npm run dev
    ports:
     - 12346:5001
    depends_on:
      - mongodb
      - messagebroker
    environment:
      - PORT=5001
      - MONGO_URL=mongodb://josvoogt21:password@mongodb:27017
      - DB_NAME=mysecondapp
      - MESSAGEBROKER=amqp://messagebroker:5672
    volumes:
      - ./mysecondapp:/secondapp

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=josvoogt21
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - 27017:27017
    restart: always
    volumes:
      - /var/lib/docker/volumes/my-vol/db

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  db-exporter:
    image: bitnami/mongodb-exporter:latest
    environment:
      - MONGODB_URI=mongodb://josvoogt21:password@mongodb:27017

  grafana:
    build: ./grafana
    ports:
      - 3000:3000

  messagebroker:
    image: rabbitmq:3-management
    container_name: messagebroker
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  my-vol:
  prometheus-data: 

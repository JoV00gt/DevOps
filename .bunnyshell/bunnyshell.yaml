kind: Environment
name: preview
type: primary
urlHandle: jvav
components:
    -
        kind: Database
        name: db-exporter
        dockerCompose:
            environment:
                MONGODB_URI: 'mongodb://josvoogt21:password@mongodb:27017'
            image: 'bitnami/mongodb-exporter:latest'
    -
        kind: Application
        name: grafana
        gitRepo: 'https://github.com/JoV00gt/DevOps.git'
        gitBranch: main
        gitApplicationPath: grafana
        dockerCompose:
            build:
                context: ./grafana
                dockerfile: Dockerfile
            ports:
                - '3000:3000'
        hosts:
            -
                hostname: 'grafana-{{ env.base_domain }}'
                path: /
                servicePort: 3000
    -
        kind: Service
        name: messagebroker
        dockerCompose:
            image: 'rabbitmq:3-management'
            ports:
                - '5672:5672'
                - '15672:15672'
            restart: always
        hosts:
            -
                hostname: 'messagebroker-{{ env.base_domain }}'
                path: /
                servicePort: 5672
    -
        kind: Database
        name: mongodb
        dockerCompose:
            environment:
                MONGO_INITDB_ROOT_PASSWORD: password
                MONGO_INITDB_ROOT_USERNAME: josvoogt21
            image: 'mongo:latest'
            ports:
                - '27017:27017'
            restart: always
    -
        kind: Application
        name: myapp
        gitRepo: 'https://github.com/JoV00gt/DevOps.git'
        gitBranch: main
        gitApplicationPath: myapp
        dockerCompose:
            build:
                context: ./myapp
                dockerfile: Dockerfile
            command:
                - npm
                - run
                - dev
            environment:
                DB_NAME: myapp
                MESSAGEBROKER: 'amqp://messagebroker:5672'
                MONGO_URL: 'mongodb://josvoogt21:password@mongodb:27017'
                PORT: '5000'
            ports:
                - '12345:5000'
        hosts:
            -
                hostname: 'myapp-{{ env.base_domain }}'
                path: /
                servicePort: 12345
    -
        kind: Application
        name: mysecondapp
        gitRepo: 'https://github.com/JoV00gt/DevOps.git'
        gitBranch: main
        gitApplicationPath: mysecondapp
        dockerCompose:
            build:
                context: ./mysecondapp
                dockerfile: Dockerfile
            command:
                - npm
                - run
                - dev
            environment:
                DB_NAME: mysecondapp
                MESSAGEBROKER: 'amqp://messagebroker:5672'
                MONGO_URL: 'mongodb://josvoogt21:password@mongodb:27017'
                PORT: '5001'
            ports:
                - '12346:5001'
        hosts:
            -
                hostname: 'mysecondapp-{{ env.base_domain }}'
                path: /
                servicePort: 12346
    -
        kind: Service
        name: prometheus
        dockerCompose:
            command:
                - '--web.enable-lifecycle'
                - '--config.file=/etc/prometheus/prometheus.yml'
            image: 'prom/prometheus:latest'
            ports:
                - '9090:9090'
        hosts:
            -
                hostname: 'prometheus-{{ env.base_domain }}'
                path: /
                servicePort: 9090
        volumes:
            -
                name: prometheus-data
                mount: /prometheus
                subPath: ''
volumes:
    -
        name: prometheus-data
        size: 1Gi
        type: disk
